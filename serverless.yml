service:
  name: initiative-tracker

plugins:
  - serverless-plugin-epsagon
  - serverless-webpack
  - serverless-plugin-iam-checker
  - serverless-cloudformation-resource-counter

provider:
  name: aws
  stage: local
  runtime: nodejs8.10
  environment:
    INITIATIVES_TABLE: { Ref: InitiativesTable }
    INITIATIVES_TABLE_TYPE_INDEX: ${self:custom.typeIndex}
    INITIATIVES_TABLE_STATUS_INDEX: ${self:custom.statusIndex}
    REVISION: ${file(infrastructure/helper.js):revision}
    STAGE: ${opt:stage, self:provider.stage}
    SLACK_CLIENT_ID: ${env:SLACK_CLIENT_ID}
    SLACK_CLIENT_SECRET: ${env:SLACK_CLIENT_SECRET}
    SLACK_SIGNING_SECRET: ${env:SLACK_SIGNING_SECRET}
    SLACK_REDIRECT_URI:
      Fn::Join:
        - ''
        - - 'https://'
          - { Ref: ApiGatewayRestApi }
          - '.execute-api.'
          - { Ref: AWS::Region }
          - '.'
          - { Ref: AWS::URLSuffix }
          - '/${opt:stage, self:provider.stage}/redirect'
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { Fn::GetAtt: [InitiativesTable, Arn] }
        - { Fn::Join: ['', [{ Fn::GetAtt: [InitiativesTable, Arn] }, '/index/*']] }

custom:
  typeIndex: TYPE_INDEX
  statusIndex: STATUS_INDEX
  epsagon:
    token: ${env:EPSAGON_TOKEN}
    appName: ${self:service.name}-${opt:stage, self:provider.stage}

functions:
  join-initiative:
    handler: app/join-initiative.handler
    events:
      - http:
          method: post
          path: initiatives/join

  say-hello:
    handler: app/say-hello.foo
    events:
      - http:
          method: post
          path: initiatives/say-hello

  create-initiative:
    handler: app/create-initiative.handler
    events:
      - http:
          method: post
          path: initiatives/create

  list-initiatives:
    handler: app/list-initiatives.handler
    events:
      - http:
          method: post
          path: initiatives/list

  action-endpoint:
    handler: app/action-endpoint.handler
    events:
      - http:
          method: post
          path: actions

  auth-redirect:
    handler: app/auth-redirect.handler
    events:
      - http:
          method: get
          path: /auth/redirect

resources:
  Resources:
    InitiativesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: initiativeId
            AttributeType: S
          - AttributeName: type
            AttributeType: S
        KeySchema:
          - AttributeName: initiativeId
            KeyType: HASH
          - AttributeName: type
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: ${self:custom.typeIndex}
            KeySchema:
              - AttributeName: type
                KeyType: HASH
              - AttributeName: initiativeId
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
          - IndexName: ${self:custom.statusIndex}
            KeySchema:
              - AttributeName: type
                KeyType: HASH
              - AttributeName: status
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
